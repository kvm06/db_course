ДЗ индексы и ограничения
1. Имеется таблица payments, в которой хранится информация о входящих и исходящих платежах
  - id - id записи, primary key (высокая кардинальность). Данное поле можно сделать первичным ключем и для него будет автоматически создан индекс и установлено огранчиение NOT NULL. 
  - created_at - дата создания записи (высокая кардинальность). На данное поле можно добавить ограничение NOT NULL
  - payment_sum - сумма платежа (высокая кардинальность), можно установить ограничение NOT NULL, а также добавить check, чтобы сумма не была отрицательной. 
  - is_credit - признак платежа (true - входящий, false - исходящий), низкая кардинальность, т.к. может быть всего два значения. На данное поле можно установить ограничение NOT NULL, 
  - customer_id -  id плательщика в базе, высокая кардинальность. Можно установить ограничение FOREIGN KEY и добавить индекс btree, высокая кардинальность
Возможные задачи и запросы: 
  1) выбрать все входящие платежи за определенный период/день. В данном запросе задействовано два поля - created_at и is_credit. Для ускорения запроса можно добавить составной индекс на 2 поля (created_at, is_credit)
  2) выбрать все платежи определенного покупателя. Можно установить индекс на поле customer_id.  
 
2. Имеется таблица products, в которой хранится информация о товарах. Мы можем установить следующие ограничения и внешние ключи
  - id - id записи, primary key (высокая кардинальность). Данное поле можно сделать первичным ключем и для него будет автоматически создан индекс и установлено огранчиение NOT NULL. , высокая кардинальность
  - created_at - дата создания записи, NOT NULL, высокая кардинальность
  - price - цена продажи товара, check price > 0, высокая кардинальность
  - product_category_id - id категории, товара  FOREIGN KEY, низкая кардинальность
  - product_type_id - id типа товара,  FOREIGN KEY, низкая кардинальность
  - priduct_brand_id - id бренда товара,  FOREIGN KEY, низкая кардинальность
  - product_season_id - id сезона товара,  FOREIGN KEY, низкая кардинальность
  - product_color_id - id цвета товара,  FOREIGN KEY, высокая кардинальность
Возможные задачи и запросы
  1) выбрать товар в пределах определенной цены. Можно добавить индекс на поле price. Данное поле имеет высокую кардинальность
  2) выбрать все товары определенной категории и сезона. Наприме, выбрать всю мужскую зимнюю обувь. Для этого можно добавить сотавной индекс на поле category_id и season_id
  3) выбрать все товары определенной категории, сезона, типа. Наприме, выбрать все мужские летние куртки. Для этого можно добавить сотавной индекс на поле type_id, category_id, season_id

3. Имеется таблица customers, в которой хранится информация о покупателях. 
  - id - id пользователя, PRIMARY KEY, NOT NULL, высокая кардинальность
  - created_at - дата создания записи, NOT NULL, высокая кардинальность
  - updated_at - дата обновления записи, высокая кардинальность
  - password_hash - hash пароля, NOT NULL, высокая кардинальность
  - email - email, ограничение UNIQUE, т.к. данное поле должно быть уникальным, высокая кардинальность
Возможные задачи и запросы
  1) получить информацию о новых или старых пользователях для предложения им скидок или акций. Для ускорения запроса можно добавить запрос на поля created_at и updated_at
  
4. Имеется таблица reviews, в которой хранится информация об отзывах о товаре: 
  - id - id отзыва, PRIMARY KEY, NOT NULL
  - created_at  - дата создания записи, NOT NULL  
  - product_id - id продукта, по которому оставлен отзыв, FOREIGN KEY 
  - customer_id - покупатель, оставивший отзыв, FOREIGN KEY
  - vote - оценка от 1 до 5, можно добавить CHECK vote >= 1 and vote <= 5
  Возможные запросы:
    1) получить информацию о товарах с наименьшими или наибольшими оценками. Можно добавить индекс на поле vote. У поля низкая кардинальность
