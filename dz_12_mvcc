Описать пример транзакции из своего проекта с изменением данных в нескольких таблицах. Реализовать в виде хранимой процедуры.

При оформлении пользователем заказа, нам необходимо, изменить статус заказа и уменьшить количество товара на складе. 
Для этого изменим в одной транзакции две таблицы: заказы и товары-на-складе (orders, orders_products, products_in_stock); 

Добавим несколько статусов 
insert into order_statuses(status_name)
values ('Новый'),  ('В обработке'), ('Принят'), ('Передан в доставку'), ('Выполнен'), ('Отменен'), ('Возврат'); 

Добавим заказ 
insert into orders (customer_id, order_status_id) values (1, 1); 
Добавим описание заказа
insert into orders_products (order_id, product_id, quantity, price)
values (1, 1, 1, 10000);

Создадим функцию, которая будет переводить заказ из статуса "Новый" в статус "В обработке", а также резервировать товар выбранный покупателем.

create procedure `accept_order`(_order_id int)
begin    
	declare exit handler for sqlexception
    begin
		  rollback;
    end;
  
  start transaction;
	update orders set order_status_id = 2 where id = _order_id;

	update products_in_stock ps
    inner join orders_products op on op.product_id = ps.product_id
    inner join orders o on o.id = op.order_ids and o.id = _order_id
	set ps.quantity = ps.quantity - op.quantity;
    
  commit;
end;

Загрузить данные из приложенных в материалах csv.
Реализовать следующими путями:
Создадим таблицу для хранения данных
drop table csv_data; 
create table csv_data (Handle varchar(255), Title	varchar(255), Body	text, 
Vendor	varchar(255), Type	varchar(255), Tags	varchar(255), 
Published	varchar(255), Option1Name varchar(255),	Option1Value varchar(255),	
Option2Name varchar(255),	Option2Value varchar(255),Option3Name varchar(255),	
Option3Value varchar(255), VariantSKU	varchar(255), VariantGrams	varchar(255), 
VariantInventoryTracker varchar(255), VariantInventoryQty	varchar(255), 
VariantInventoryPolicy	varchar(255), VariantFulfillmentService	varchar(255), 
VariantPrice varchar(255), VariantCompareAtPrice	varchar(255), VariantRequiresShipping	varchar(255), 
VariantTaxable varchar(255), VariantBarcode  varchar(255), ImageSrc	text, ImageAltText	varchar(255), 
GiftCard	varchar(255), SEOTitle varchar(255), SEODescription	varchar(255),
 GoogleShoppingGoogleProductCategory	varchar(255), GoogleShoppingGender varchar(255), 
 GoogleShoppingAgeGroup varchar(255), GoogleShoppingMPN varchar(255), GoogleShoppingAdWordsGrouping varchar(255), 	
 GoogleShoppingAdWordsLabels	varchar(255), GoogleShoppingCondition varchar(255), GoogleShoppingCustomProduct	varchar(255), 
 GoogleShoppingCustomLabel0 varchar(255), GoogleShoppingCustomLabel1	varchar(255), GoogleShoppingCustomLabel2 varchar(255), 
 GoogleShoppingCustomLabel3 varchar(255), GoogleShoppingCustomLabel4 varchar(255), VariantImage	varchar(255), 
 VariantWeightUnit varchar(255));

 Сохраним файлы в каталог C:/ProgramData/MySQL/MySQL Server 8.0/Uploads
 
 Загрузим файлы с помощью load data
load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Apparel.csv' 
into table csv_data 
fields terminated by ',' 
enclosed by '"' 
lines terminated by '\n' 
ignore 1 rows;

Загрузка с помощью mysqlimport
mysqlimport --ignore-lines=1 \
            --fields-terminated-by=, \
             -u root \
             -p shop_db \
             Apparel.csv
